{"version":3,"sources":["components/Form.jsx","components/CurrentInfo.jsx","components/Forecast.jsx","components/HourlyInfo.jsx","App.js","serviceWorker.js","index.js"],"names":["Form","react_default","a","createElement","className","onSubmit","this","props","getWetherData","type","name","placeholder","autoComplete","Component","CurrentInfo","_this$props$data","data","location","temp","feelsLike","windspeed","humidity","pressure","weatherDesc","weatherIcon","localtime","error","hours","Date","getHours","toString","padStart","minutes","getMinutes","src","alt","concat","Math","round","weekDays","Forecast","renderDayInfoElement","arguments","length","undefined","index","date","mintempC","maxtempC","hourly","weatherIconUrl","value","lang_ru","key","getDay","getDate","daysData","map","timeLine","0","300","600","900","1200","1500","1800","2100","HourlyInfo","renderHourlyInfoElement","time","tempC","description","hourlyData","WETHER_API_KEY","IP_API_KEY","App","state","_callee","e","cityName","api_url_response","_ref2","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","city","fetch","sent","json","_this","setState","request","query","current_condition","temp_C","FeelsLikeC","windspeedKmph","time_zone","weather","stop","getCityName","_callee2","ip_api_response","dataIP","_ref4","_context2","console","log","abrupt","_this2","then","slice","src_components_Form","src_components_CurrentInfo","src_components_HourlyInfo","src_components_Forecast","role","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca3d988a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Form.css';\r\n\r\n\r\nclass Form extends Component {\r\n  render () {\r\n    return (\r\n      <div className=\"form-section\">\r\n        <form onSubmit={this.props.getWetherData} className=\"form\">\r\n          <input type=\"text\" name=\"city\" placeholder=\"–ì–æ—Ä–æ–¥\" autoComplete=\"off\"/>\r\n          <button type=\"submit\">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\nimport './CurrentInfo.css';\r\n\r\n\r\nclass CurrentInfo extends Component {\r\n  render () {\r\n    const {location, temp, feelsLike, windspeed, humidity, pressure, weatherDesc, weatherIcon, localtime, error} = this.props.data;\r\n\r\n    let hours = new Date(localtime).getHours().toString().padStart(2, \"0\"),\r\n        minutes = new Date(localtime).getMinutes().toString().padStart(2, \"0\");\r\n\r\n    return (\r\n      <div className=\"currentinfo-section container\">\r\n      { location &&\r\n        <div>\r\n          <h3> {location} </h3>\r\n          <div className=\"currentinfo-main\">\r\n            <img src={weatherIcon} alt=\"weather-icon\"/>\r\n            <span className=\"current-temp\">{temp}¬∞</span>\r\n          </div>\r\n          <p className=\"currentinfo-desc\"> {weatherDesc} </p>\r\n          <p className=\"update-info\"> –û–±–Ω–æ–≤–ª–µ–Ω–æ –≤ {`${hours}:${minutes}`}</p>\r\n          <div className=\"additional-info\">\r\n            <div className=\"additional-items\">\r\n              <p> –ü–æ –æ—â—É—â–µ–Ω–∏—è–º {feelsLike}¬∞ </p>\r\n              <p> –í–µ—Ç–µ—Ä {windspeed}–∫–º/—á </p>\r\n            </div>\r\n            <div className=\"additional-items\">\r\n              <p> –í–ª–∞–∂–Ω–æ—Å—Ç—å üå¢ {humidity}% </p>\r\n              <p> –î–∞–≤–ª–µ–Ω–∏–µ {Math.round(pressure/1.33322)}–º–º </p>\r\n            </div>\r\n          </div>\r\n       </div>\r\n      }\r\n      <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrentInfo;\r\n","import React, { Component } from 'react';\r\nimport './Forecast.css';\r\n\r\nconst weekDays = [\"–í—Å.\", \"–ü–Ω.\", \"–í—Ç.\", \"–°—Ä.\", \"–ß—Ç.\", \"–ü—Ç.\", \"–°–±.\"]\r\n\r\nclass Forecast extends Component {\r\n\r\n    renderDayInfoElement = (data = [], index) => {\r\n           const {date, mintempC, maxtempC} = data,\r\n                  weatherIcon = data.hourly[4].weatherIconUrl[0].value,\r\n                  weatherDesc = data.hourly[4].lang_ru[0].value;\r\n           return (\r\n             <li key={index}>\r\n               <p>{`${weekDays[new Date(date).getDay()]} ${new Date(date).getDate()}`}</p>\r\n               <img src={weatherIcon} alt=\"weather-icon\"/>\r\n               <p className=\"daysinfo-temp\">{mintempC}¬∞  <span>{maxtempC}¬∞</span></p>\r\n               <p className=\"daysinfo-description\">{weatherDesc}</p>\r\n             </li>);\r\n       }\r\n\r\n    render () {\r\n      const {daysData} = this.props.data;\r\n\r\n      return (\r\n        <div className=\"forecast-section\">\r\n          {daysData === undefined ? '' : <h4>–ü–æ–≥–æ–¥–∞ –≤ –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏</h4>}\r\n          <div className=\"daysinfo-items\">\r\n            {daysData === undefined ? '' : daysData.map(this.renderDayInfoElement)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Forecast;\r\n","import React, { Component } from 'react';\r\nimport './HourlyInfo.css';\r\n\r\nconst timeLine = {\r\n  0: '00:00',\r\n  300: '03:00',\r\n  600: '06:00',\r\n  900: '09:00',\r\n  1200: '12:00',\r\n  1500: '15:00',\r\n  1800: '18:00',\r\n  2100: '21:00',\r\n};\r\n\r\nclass HourlyInfo extends Component {\r\n\r\n  renderHourlyInfoElement = (data = [], index) => {\r\n         const {time, tempC} = data,\r\n                weatherIcon = data.weatherIconUrl[0].value,\r\n                description = data.lang_ru[0].value;\r\n         return (\r\n          <li key={index}>\r\n             <p>{timeLine[time]}</p>\r\n             <img src={weatherIcon} alt=\"weatherIcon\"/>\r\n             <p className=\"hourlyinfo-temp\">{tempC}¬∞</p>\r\n             <p className=\"hourlyinfo-description\">{description}</p>\r\n          </li>\r\n       );\r\n     }\r\n\r\n  render () {\r\n    const {hourlyData} = this.props.data;\r\n\r\n    return (\r\n      <div className=\"hourlyinfo__section\">\r\n        {hourlyData === undefined ? '' : <h4>–ü–æ–≥–æ–¥–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ –¥–Ω—è</h4>}\r\n        <div className=\"hourlyinfo-items\">\r\n          {hourlyData === undefined ? '' : hourlyData.map(this.renderHourlyInfoElement)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HourlyInfo;\r\n","import React, { Component } from 'react';\r\nimport Form from './components/Form';\r\nimport CurrentInfo from './components/CurrentInfo';\r\nimport Forecast from './components/Forecast';\r\nimport HourlyInfo from './components/HourlyInfo';\r\n\r\n\r\nconst WETHER_API_KEY = \"47fa2bde9d2c41b385783953191601\",\r\n      IP_API_KEY = \"446d64c7cacea793ebf82c1445104d75\";\r\n\r\nclass App extends Component {\r\n\r\n  state = {};\r\n\r\ngetWetherData = async (e) => {\r\n  e.preventDefault();\r\n\r\n  let cityName = e.target.elements.city.value\r\n\r\n  if (cityName) {\r\n    const api_url_response = await\r\n    fetch(`https://api.worldweatheronline.com/premium/v1/weather.ashx?key=${WETHER_API_KEY}&lang=ru&q=${cityName}&showlocaltime=yes&mca=no&format=json`);\r\n\r\n    const { data } = await api_url_response.json();\r\n\r\n    if (data.error) {\r\n      this.setState({\r\n        data: {\r\n          error: \"–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\"\r\n        }\r\n      });\r\n    } else {this.setState({\r\n        data: {\r\n          location: data.request[0].query,\r\n          weatherDesc: data.current_condition[0].lang_ru[0].value,\r\n          temp: data.current_condition[0].temp_C,\r\n          feelsLike: data.current_condition[0].FeelsLikeC,\r\n          humidity: data.current_condition[0].humidity,\r\n          windspeed: data.current_condition[0].windspeedKmph,\r\n          pressure: data.current_condition[0].pressure,\r\n          weatherIcon: data.current_condition[0].weatherIconUrl[0].value,\r\n          localtime: data.time_zone[0].localtime,\r\n          hourlyData: data.weather[0].hourly,\r\n          daysData: data.weather\r\n        }\r\n      });\r\n    }\r\n  } else {\r\n    this.setState({\r\n      data: {\r\n        error: \"–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!\"\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\ngetCityName = async () => {\r\n  const ip_api_response = await\r\n  fetch(`http://api.ipstack.com/check?access_key=${IP_API_KEY}&language=ru`);\r\n\r\n  const dataIP = await ip_api_response.json(),\r\n        city = dataIP.city;\r\n\r\n  const api_url_response = await\r\n  fetch(`https://api.worldweatheronline.com/premium/v1/weather.ashx?key=${WETHER_API_KEY}&lang=ru&q=${city}&showlocaltime=yes&mca=no&format=json`);\r\n\r\n  const { data } = await api_url_response.json();\r\n  console.log(data);\r\n\r\n  return data;\r\n}\r\n\r\ncomponentDidMount() {\r\n        this.getCityName()\r\n        .then(data => {\r\n          this.setState({\r\n            data: {\r\n              location: data.request[0].query,\r\n              weatherDesc: data.current_condition[0].lang_ru[0].value,\r\n              temp: data.current_condition[0].temp_C,\r\n              feelsLike: data.current_condition[0].FeelsLikeC,\r\n              humidity: data.current_condition[0].humidity,\r\n              windspeed: data.current_condition[0].windspeedKmph,\r\n              pressure: data.current_condition[0].pressure,\r\n              weatherIcon: data.current_condition[0].weatherIconUrl[0].value,\r\n              localtime: data.time_zone[0].localtime,\r\n              hourlyData: data.weather[0].hourly,\r\n              daysData: data.weather.slice(0, 7)\r\n            }\r\n          });\r\n        });\r\n    }\r\n\r\n\r\n  render() {\r\n    const {data} = this.state;\r\n\r\n    if (!data) {\r\n      return (\r\n        <div className=\"d-flex justify-content-center align-items-center spinner\">\r\n          <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"app\">\r\n        <div>\r\n          <Form getWetherData={this.getWetherData} />\r\n          <CurrentInfo data = {this.state.data} />\r\n          <HourlyInfo data = {this.state.data} />\r\n          <Forecast data = {this.state.data} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}